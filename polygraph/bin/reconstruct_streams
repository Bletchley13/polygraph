#!/usr/bin/env python
#      Polygraph (release 0.1)
#      Signature generation algorithms for polymorphic worms
#
#      Copyright (c) 2004-2005, Intel Corporation
#      All Rights Reserved
#
#  This software is distributed under the terms of the Eclipse Public
#  License, Version 1.0 which can be found in the file named LICENSE.
#  ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS SOFTWARE CONSTITUTES
#  RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT

import polygraph.trace_crunching.pkts_to_streams as pkts_to_streams
import os
import struct
import sys

def usage():
    import sys
    print "Usage: %s outname pcapfile1 [pcapfile2] [pcapfile3]..." % \
        sys.argv[0]
    sys.exit(1)

if len(sys.argv) < 3:
    usage()

# 'data' will contain the reconstructed streams
# 'offsets' will contain the offsets of the start of each stream

nosary = False
arg = 1
if sys.argv[arg] == '--nosary':
    nosary = True
    arg += 1

dirname = sys.argv[arg]
arg += 1

os.mkdir(dirname)
dataname = dirname + '/data'
datafile = open(dataname, 'w')
offname = dirname + '/offsets'
off_file = open(offname, 'w')

offset = 0
def callback(stream):
    if len(stream['data']) > 0:
        global offset
        off_file.write(struct.pack('L', offset))
        datafile.write(stream['data'])
        offset += len(stream['data'])

if len(sys.argv[arg:]) == 0:
    usage()

for trace in sys.argv[arg:]:
    pkts_to_streams.process_trace(trace,
                    callback=callback,
                    timeout=60,
                    filter=None)

off_file.close()
datafile.close()

# construct a suffix array of the reconstructed streams
if not nosary:
    os.popen2('mksary %s' % dataname)
